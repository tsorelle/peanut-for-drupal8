<?php
use Peanut\sys\ViewModelManager;

/**
 * Implements hook_preprocess_HOOK().
 */
function pnut_tops_preprocess_html(&$variables)
{
    $vm = ViewModelManager::getViewModelInfo();
    $variables['knockoutviewname'] = $vm === false ? false : $vm->vmName;
}

/**
 * Implements hook_page_attachments_alter().
 */
function pnut_tops_page_attachments_alter(array &$attachments)
{
    $hasVm = ViewModelManager::hasVm();
    if ($hasVm) {
        $libName = \Tops\sys\TConfiguration::getBoolean('optimize','peanut',true) ?
            'pnut_tops/peanut-loader-optimized' :
            'pnut_tops/peanut-loader';
        $attachments['#attached']['library'][] = 'pnut_tops/view-models';
        $attachments['#attached']['library'][] = $libName;
    }

}

/**
 * Implements hook_preprocess().
 */
function pnut_tops_preprocess_node(&$variables) {
    if (!empty($variables['page'])) {
        /**
         * @var \Peanut\sys\ViewModelInfo
         */
        $vmInfo = ViewModelManager::getViewModelInfo();
        if ($vmInfo !== null && $variables['node']->id() === $vmInfo->id) {
            if ($vmInfo->view != 'content') {
                $content = file_get_contents(DRUPAL_ROOT . '/' . $vmInfo->view);
                if ($content !== false) {
                    $variables['content']['body'][0]['#format'] = 'full_html';
                    $variables['content']['body'][0]['#text'] = $content;
                } else {
                    trigger_error("View file not found: " . $vmInfo->view, E_NOTICE);
                }
            }

        }
    }
}

function pnut_tops_install() {
    $installationIni = @parse_ini_file(__DIR__.'/installation/installation.ini');
    if ($installationIni !== false && !empty($installationIni['enabled'])) {
        require_once (__DIR__.'/installation/bootstrap/PeanutModuleInstaller.php');
        \Tops\drupal8\PeanutModuleInstaller::install();
    }
}

function pnut_tops_uninstall() {
    $installationIni = @parse_ini_file(__DIR__.'/installation/installation.ini');
    if ($installationIni !== false && (!empty($installationIni['enabled'])) && class_exists('\Peanut\sys\DefaultPeanutInstaller')) {
        $installer = new \Peanut\sys\DefaultPeanutInstaller();
        $installer->uninstallAll();
    }
}
